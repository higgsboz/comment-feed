{"version":3,"sources":["FeedContext.tsx","utils/utils.ts","assets/profile-pic.png","components/Avatar.tsx","assets/missing-avatar.png","components/CommentItem.tsx","components/PostItem.tsx","App.tsx","index.tsx"],"names":["dateParser","_key","value","a","exec","Date","b","split","FeedContext","createContext","FeedProvider","children","localPosts","JSON","parse","localStorage","getItem","localComments","useState","posts","setPosts","comments","setComments","Provider","updatedPosts","setItem","stringify","updatedComments","useFeed","context","useContext","undefined","Error","defaultProps","ONE_HOUR","dateToString","date","dayDate","dayjs","diff","diffDay","minute","hour","format","SizeDimension","Avatar","className","size","src","profilePicture","width","height","alt","onError","e","target","onerror","missingAvatar","CommentItem","comment","id","text","likes","createdDate","createdBy","isEditMode","setEditMode","editText","setEditText","updateComment","updatedComment","slice","handleCommentEditKeyPress","key","style","backgroundColor","firstName","lastName","fontSize","occupation","rows","placeholder","resize","autoFocus","onBlur","onKeyPress","onChange","type","onClick","icon","faHeart","faPencilAlt","isDeleted","faTrash","PostItem","post","showCommentSection","setShowCommentSection","postComments","useMemo","filter","postId","sort","getTime","updatePost","updatedPost","handlePostEditKeyPress","test","faMapMarkerAlt","location","state","country","data-bs-toggle","aria-expanded","faEllipsisH","aria-labelledby","disabled","faCircle","length","cursor","faCommentDots","commentText","Me","addComment","borderRadius","borderStyle","map","ContentCreator","message","setMessage","faPhotoVideo","newPost","addPost","Feed","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73859760.chunk.js","sourcesContent":["import React, { createContext, ReactNode, useContext, useState } from 'react';\n\nimport { Comment } from './types/comment';\nimport { Post } from './types/post';\n\nexport type FeedContextProps = {\n  posts: Post[];\n  setPosts: (posts: Post[]) => void;\n  comments: Comment[];\n  setComments: (comments: Comment[]) => void;\n};\n\ntype FeedProviderProps = {\n  children?: ReactNode;\n};\n\n// This is passed into the JSON.parse() call as the reviver so that\n// dates formatted as JSON strings will be converted into JS Date objects.\n// eslint-disable-next-line max-len\n// This code was taken from https://weblog.west-wind.com/posts/2014/jan/06/javascript-json-date-parsing-and-real-dates\nconst dateParser = (_key: any, value: any): any => {\n  // eslint-disable-next-line\n  var reISO =\n    // eslint-disable-next-line max-len\n    /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*))(?:Z|(\\+|-)([\\d|:]*))?$/;\n  // eslint-disable-next-line\n  var reMsAjax = /^\\/Date\\((d|-|.*)\\)[\\/|\\\\]$/;\n\n  if (typeof value === 'string') {\n    let a = reISO.exec(value);\n    if (a) {\n      return new Date(value);\n    }\n    a = reMsAjax.exec(value);\n    if (a) {\n      const b = a[1].split(/[-+,.]/);\n      return new Date(b[0] ? +b[0] : 0 - +b[1]);\n    }\n  }\n  return value;\n};\n\nconst FeedContext = createContext<FeedContextProps>({} as FeedContextProps);\n\n// eslint-disable-next-line func-names,\nexport const FeedProvider = function ({ children }: FeedProviderProps): any {\n  const localPosts: Post[] = JSON.parse(\n    localStorage.getItem('postData') || '[]',\n    dateParser\n  );\n  const localComments: Comment[] = JSON.parse(\n    localStorage.getItem('commentData') || '[]',\n    dateParser\n  );\n\n  const [posts, setPosts] = useState<Post[]>(localPosts);\n  const [comments, setComments] = useState<Comment[]>(localComments);\n\n  const updatePosts = (updatedPosts: Post[]): void => {\n    localStorage.setItem('postData', JSON.stringify(updatedPosts));\n    setPosts(updatedPosts);\n  };\n\n  const updateComments = (updatedComments: Comment[]): void => {\n    localStorage.setItem('commentData', JSON.stringify(updatedComments));\n    setComments(updatedComments);\n  };\n\n  // const providerValue = useMemo(() => ({\n  //   posts,\n  //   setPosts: updatePosts,\n  //   comments,\n  //   setComments: updateComments,\n  // }), [posts, updatePosts, comments, updateComments]);\n\n  return (\n    <FeedContext.Provider\n      // eslint-disable-next-line react/jsx-no-constructed-context-values\n      value={{\n        posts,\n        setPosts: updatePosts,\n        comments,\n        setComments: updateComments,\n      }}\n    >\n      {children}\n    </FeedContext.Provider>\n  );\n};\n\nFeedProvider.defaultProps = {\n  children: null,\n};\n\nexport function useFeed(): FeedContextProps {\n  const context = useContext(FeedContext);\n  if (context === undefined) {\n    throw new Error('useFeed must be used within a FeedProvider');\n  }\n  return context;\n}\n","import dayjs from 'dayjs';\n\nconst ONE_MINUTE = 60 * 1000;\nconst ONE_HOUR = 60 * ONE_MINUTE;\nconst ONE_DAY = ONE_HOUR * 24;\n\n// eslint-disable-next-line\nexport function dateToString(date: Date): string {\n  const dayDate = dayjs(date);\n\n  const diff = dayjs().diff(dayDate);\n  const diffDay = dayjs(diff);\n\n  if (diff < ONE_MINUTE) {\n    return 'Just now';\n  }\n\n  if (diff < ONE_HOUR) {\n    return `${diffDay.minute()} minutes ago`;\n  }\n\n  if (diff < ONE_DAY) {\n    return `${diffDay.hour()} hours ago`;\n  }\n\n  return dayDate.format('MM/DD/YYYY');\n}\n","export default __webpack_public_path__ + \"static/media/profile-pic.6fb0befb.png\";","import React from 'react';\nimport profilePicture from '../assets/profile-pic.png';\nimport missingAvatar from '../assets/missing-avatar.png';\n\nenum SizeDimension {\n  sm = 40,\n  lg = 60,\n}\n\ntype AvatarProps = {\n  className?: string;\n  size: 'sm' | 'lg';\n};\n\n// eslint-disable-next-line func-names\nconst Avatar = function ({ className, size }: AvatarProps): JSX.Element {\n  return (\n    <img\n      src={profilePicture}\n      className={`rounded-circle ${className}` ?? ''}\n      width={SizeDimension[size]}\n      height={SizeDimension[size]}\n      alt=\"avatar\"\n      onError={(e: any) => {\n        e.target.onerror = null;\n        e.target.src = missingAvatar;\n      }}\n    />\n  );\n};\n\nAvatar.defaultProps = {\n  className: '',\n};\n\nexport default Avatar;\n","export default __webpack_public_path__ + \"static/media/missing-avatar.c3f94521.png\";","import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faHeart,\n  faPencilAlt,\n  faTrash,\n} from '@fortawesome/free-solid-svg-icons';\nimport { Comment } from '../types/comment';\nimport { dateToString } from '../utils/utils';\nimport { useFeed } from '../FeedContext';\nimport Avatar from './Avatar';\n\ninterface Props {\n  comment: Comment;\n}\n\n// eslint-disable-next-line func-names\nconst CommentItem = function ({ comment }: Props): JSX.Element {\n  const { id, text, likes, createdDate, createdBy } = comment;\n\n  const { comments, setComments } = useFeed();\n\n  const [isEditMode, setEditMode] = useState<boolean>(false);\n  const [editText, setEditText] = useState<string>(text);\n\n  const updateComment = (updatedComment: Comment): void => {\n    setComments([\n      ...comments.slice(0, id - 1),\n      {\n        ...comments[id - 1],\n        ...updatedComment,\n      },\n      ...comments.slice(id),\n    ]);\n  };\n\n  const handleCommentEditKeyPress = (\n    e: React.KeyboardEvent<HTMLTextAreaElement>\n  ): void => {\n    const target = e.target as HTMLTextAreaElement;\n    if (e.key === 'Enter' && target.value !== '') {\n      updateComment({ ...comment, text: target.value });\n      setEditMode(false);\n    }\n  };\n\n  const renderTextContent = (): JSX.Element => {\n    if (!isEditMode) {\n      return <span>{text}</span>;\n    }\n\n    return (\n      <textarea\n        className=\"form-control border-0 my-2\"\n        id=\"commentEditTextarea\"\n        rows={2}\n        value={editText}\n        placeholder=\"Add a comment\"\n        style={{ resize: 'none' }}\n        // eslint-disable-next-line jsx-a11y/no-autofocus\n        autoFocus\n        onBlur={() => setEditMode(false)}\n        onKeyPress={handleCommentEditKeyPress}\n        onChange={(e) => setEditText(e.target.value)}\n      />\n    );\n  };\n\n  return (\n    <div className=\"d-flex flex-row mt-3 mb-3 w-100\">\n      <Avatar className=\"me-2\" size=\"sm\" />\n      <div className=\"card w-100\" style={{ backgroundColor: '#D9E1EB' }}>\n        <div className=\"card-body\">\n          <div className=\"d-flex justify-content-between\">\n            <span className=\"fw-bold\">\n              {`${createdBy.firstName} ${createdBy.lastName}`}\n            </span>\n            <span className=\"text-secondary\" style={{ fontSize: 14 }}>\n              {dateToString(createdDate)}\n            </span>\n          </div>\n          <span className=\"text-primary\" style={{ fontSize: 14 }}>\n            {createdBy.occupation}\n          </span>\n          <div style={{ fontSize: 14 }}>{renderTextContent()}</div>\n          <div className=\"d-flex text-secondary\">\n            <span className=\"me-3\">{likes} Likes</span>\n            <span className=\"me-3\">|</span>\n            <button\n              className=\"btn btn-link link-secondary me-3 p-0\"\n              type=\"button\"\n              onClick={() => {\n                updateComment({ ...comment, likes: likes + 1 });\n              }}\n            >\n              <FontAwesomeIcon\n                className=\"me-2\"\n                icon={faHeart}\n                style={{ fontSize: 14 }}\n              />\n              Like\n            </button>\n            <span className=\"me-3\">|</span>\n            <button\n              className=\"btn btn-link link-secondary me-3 p-0\"\n              type=\"button\"\n              onClick={() => setEditMode(true)}\n            >\n              <FontAwesomeIcon\n                className=\"me-2\"\n                icon={faPencilAlt}\n                style={{ fontSize: 14 }}\n              />\n              Edit\n            </button>\n            <span className=\"me-3\">|</span>\n            <button\n              className=\"btn btn-link link-secondary me-3 p-0\"\n              type=\"button\"\n              onClick={() => updateComment({ ...comment, isDeleted: true })}\n            >\n              <FontAwesomeIcon\n                className=\"me-2\"\n                icon={faTrash}\n                style={{ fontSize: 14 }}\n              />\n              Delete\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CommentItem;\n","import React, { useMemo, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faCircle,\n  faCommentDots,\n  faEllipsisH,\n  faHeart,\n  faMapMarkerAlt,\n} from '@fortawesome/free-solid-svg-icons';\nimport { Post } from '../types/post';\nimport { Comment } from '../types/comment';\nimport CommentItem from './CommentItem';\nimport { dateToString } from '../utils/utils';\nimport { useFeed } from '../FeedContext';\nimport Avatar from './Avatar';\nimport Me from '../assets/Me.json';\n\ninterface Props {\n  post: Post;\n}\n\n// eslint-disable-next-line func-names\nconst PostItem = function ({ post }: Props): JSX.Element {\n  const { id, text, likes, createdDate, createdBy } = post;\n\n  const { posts, setPosts, comments, setComments } = useFeed();\n\n  const [showCommentSection, setShowCommentSection] = useState<boolean>(false);\n  const [isEditMode, setEditMode] = useState<boolean>(false);\n  const [editText, setEditText] = useState<string>(text);\n\n  const postComments: Comment[] = useMemo(\n    () =>\n      comments\n        .filter((comment) => comment.postId === id && !comment.isDeleted)\n        .sort((a, b) => b.createdDate.getTime() - a.createdDate.getTime()),\n    [id, comments]\n  );\n\n  const addComment = (commentText: string): void => {\n    const comment: Comment = {\n      id: comments.length + 1,\n      postId: id,\n      text: commentText,\n      likes: 0,\n      createdDate: new Date(),\n      createdBy: Me,\n      isDeleted: false,\n    };\n    setComments([...comments, comment]);\n  };\n\n  const updatePost = (updatedPost: Post): void => {\n    setPosts([\n      ...posts.slice(0, id - 1),\n      {\n        ...posts[id - 1],\n        ...updatedPost,\n      },\n      ...posts.slice(id),\n    ]);\n  };\n\n  const handleCommentKeyPress = (e: any): void => {\n    // Create the comment if the key is Enter and the value exists\n    if (e.key === 'Enter' && e.target.value !== '') {\n      addComment(e.target.value);\n      e.target.value = '';\n    }\n  };\n\n  const handlePostEditKeyPress = (e: any): void => {\n    // Update the post if the key is Enter and the value isn't whitespace\n    if (e.key === 'Enter' && !/\\s/.test(e.target.value)) {\n      updatePost({ ...post, text: e.target.value });\n      setEditMode(false);\n    }\n  };\n\n  const renderTextContent = (): JSX.Element => {\n    if (!isEditMode) {\n      return <span>{text}</span>;\n    }\n\n    return (\n      <textarea\n        className=\"form-control border-0 ms-2 me-3 ps-1\"\n        id=\"postEditTextarea\"\n        rows={2}\n        value={editText}\n        placeholder=\"What is on your mind?\"\n        style={{ resize: 'none' }}\n        // eslint-disable-next-line jsx-a11y/no-autofocus\n        autoFocus\n        onBlur={() => setEditMode(false)}\n        onKeyPress={handlePostEditKeyPress}\n        onChange={(e) => setEditText(e.target.value)}\n      />\n    );\n  };\n\n  return (\n    <div className=\"card shadow-sm rounded-3 mt-3\">\n      <div className=\"card-body\">\n        <div className=\"d-flex flex-row mb-3\">\n          <Avatar size=\"lg\" />\n          <div className=\"d-flex flex-row w-100 justify-content-between\">\n            <div className=\"ms-3\">\n              <div className=\"fw-bold\">\n                {`${createdBy.firstName} ${createdBy.lastName}`}\n              </div>\n              <div className=\"text-primary fw-bold\" style={{ fontSize: 12 }}>\n                <FontAwesomeIcon className=\"me-2\" icon={faMapMarkerAlt} />\n                {createdBy.location.state}, {createdBy.location.country}\n              </div>\n              <div className=\"text-secondary fw-bold\" style={{ fontSize: 12 }}>\n                {dateToString(createdDate)}\n              </div>\n            </div>\n            <div className=\"dropdown dropstart my-auto\">\n              <button\n                className=\"btn btn-link link-secondary p-0\"\n                type=\"button\"\n                id={`Post-${id}-dropdown-button`}\n                data-bs-toggle=\"dropdown\"\n                aria-expanded=\"false\"\n              >\n                <FontAwesomeIcon icon={faEllipsisH} />\n              </button>\n              <ul\n                className=\"dropdown-menu\"\n                aria-labelledby={`Post-${id}-dropdown-button`}\n              >\n                <li>\n                  <button\n                    className=\"btn btn-link dropdown-item\"\n                    type=\"button\"\n                    onClick={() => setEditMode(true)}\n                    disabled={isEditMode}\n                  >\n                    Edit\n                  </button>\n                </li>\n                <li>\n                  <button\n                    className=\"btn btn-link dropdown-item\"\n                    type=\"button\"\n                    onClick={() =>\n                      updatePost({\n                        ...post,\n                        isDeleted: true,\n                      })\n                    }\n                  >\n                    Delete\n                  </button>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n        <div>{renderTextContent()}</div>\n        <div className=\"d-flex text-secondary mt-2\">\n          {likes} Likes\n          <FontAwesomeIcon\n            className=\"my-auto mx-1\"\n            icon={faCircle}\n            style={{ fontSize: 4 }}\n          />\n          {postComments.length} Comments\n        </div>\n      </div>\n      <div className=\"card-footer\">\n        <span>\n          <button\n            className=\"btn btn-link link-secondary p-0\"\n            type=\"button\"\n            onClick={() => updatePost({ ...post, likes: likes + 1 })}\n          >\n            <FontAwesomeIcon className=\"me-2 text-secondary\" icon={faHeart} />\n            Like\n          </button>\n        </span>\n        <span className=\"ms-3\">\n          <button\n            className={`btn btn-link link-secondary p-0 ${\n              showCommentSection || postComments.length > 0 ? 'fw-bold' : null\n            }`}\n            type=\"button\"\n            onClick={() => setShowCommentSection(!showCommentSection)}\n            style={{ cursor: 'pointer' }}\n          >\n            <FontAwesomeIcon\n              className=\"me-2 text-secondary\"\n              icon={faCommentDots}\n            />\n            Comment\n          </button>\n        </span>\n        {(showCommentSection || postComments.length > 0) && (\n          <div>\n            <div className=\"d-flex flex-row mt-3 mb-3 w-100\">\n              <Avatar className=\"me-2\" size=\"sm\" />\n              <input\n                className=\"px-3 w-100\"\n                placeholder=\"Add a comment\"\n                onKeyPress={handleCommentKeyPress}\n                style={{\n                  borderRadius: '25px',\n                  borderStyle: 'solid',\n                }}\n              />\n            </div>\n            {postComments.map((comment) => (\n              <CommentItem key={`Comment-${comment.id}`} comment={comment} />\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default PostItem;\n","import React, { useState } from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPhotoVideo } from '@fortawesome/free-solid-svg-icons';\nimport { Post } from './types/post';\n\nimport { FeedProvider, useFeed } from './FeedContext';\nimport PostItem from './components/PostItem';\nimport Avatar from './components/Avatar';\nimport Me from './assets/Me.json';\n\nconst ContentCreator = function (): JSX.Element {\n  const { posts, setPosts } = useFeed();\n\n  const addPost = (text: string): void => {\n    const newPost = {\n      id: posts.length + 1,\n      text,\n      likes: 0,\n      createdDate: new Date(),\n      createdBy: Me,\n      isDeleted: false,\n    };\n    setPosts([...posts, newPost]);\n  };\n\n  const [message, setMessage] = useState<string>('');\n\n  return (\n    <div className=\"card shadow-sm rounded-3\">\n      <div className=\"card-body\">\n        <div className=\"mb-3 d-flex flex-row\">\n          <Avatar size=\"sm\" />\n          <textarea\n            className=\"form-control border-0 ms-2 ps-1\"\n            id=\"postTextarea\"\n            rows={2}\n            placeholder=\"What is on your mind?\"\n            style={{ resize: 'none' }}\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n          />\n        </div>\n      </div>\n      <div className=\"card-footer bg-transparent\">\n        <div className=\"d-flex flex-wrap justify-content-between\">\n          <button type=\"button\" className=\"btn btn-dark rounded-pill\">\n            <FontAwesomeIcon className=\"me-2\" icon={faPhotoVideo} />\n            Photo/Video\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            onClick={() => {\n              addPost(message);\n              setMessage('');\n            }}\n            disabled={message.length === 0}\n          >\n            Post It\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Feed = function (): JSX.Element {\n  const { posts } = useFeed();\n\n  return (\n    <div className=\"min-vh-100\" style={{ backgroundColor: '#D9E1EB' }}>\n      <div className=\"container\">\n        <div className=\"py-3\">\n          <ContentCreator />\n          {posts\n            .filter((post) => !post.isDeleted)\n            .sort((a, b) => b.createdDate.getTime() - a.createdDate.getTime())\n            .map((post: Post) => (\n              <PostItem key={`Post-${post.id}`} post={post} />\n            ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst App = function (): JSX.Element {\n  return (\n    <FeedProvider>\n      <Feed />\n    </FeedProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport 'bootstrap/dist/js/bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}