{"version":3,"sources":["contexts/FeedContext.tsx","utils/utils.ts","assets/profile-pic.png","components/Avatar.tsx","assets/missing-avatar.png","components/CommentItem.tsx","components/PostItem.tsx","components/ContentCreator.tsx","components/Feed.tsx","App.tsx","index.tsx"],"names":["dateParser","_key","value","a","exec","Date","b","split","FeedContext","createContext","FeedProvider","children","localPosts","JSON","parse","localStorage","getItem","localComments","useState","posts","setPosts","comments","setComments","Provider","updatedPosts","setItem","stringify","updatedComments","useFeed","context","useContext","undefined","Error","defaultProps","ONE_HOUR","dateToString","date","dayDate","dayjs","diff","diffDay","minute","hour","format","SizeDimension","Avatar","className","size","src","profilePicture","width","height","alt","onError","e","target","onerror","missingAvatar","CommentItem","comment","id","text","likes","createdDate","createdBy","isEditMode","setEditMode","editText","setEditText","updateComment","updatedComment","slice","handleCommentEditKeyPress","key","trim","length","firstName","lastName","occupation","rows","placeholder","autoFocus","onBlur","onKeyPress","onChange","type","onClick","icon","faHeart","faPencilAlt","isDeleted","faTrash","PostItem","post","showCommentSection","setShowCommentSection","postComments","useMemo","filter","postId","sort","getTime","updatePost","updatedPost","handlePostEditKeyPress","faMapMarkerAlt","location","state","country","data-bs-toggle","aria-expanded","faEllipsisH","aria-labelledby","disabled","faCircle","style","fontSize","faCommentDots","commentText","Me","addComment","map","ContentCreator","message","setMessage","faPhotoVideo","newPost","addPost","Feed","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf20193f.chunk.js","sourcesContent":["import React, { createContext, ReactNode, useContext, useState } from 'react';\n\nimport { Comment } from '../types/comment';\nimport { Post } from '../types/post';\n\nexport type FeedContextProps = {\n  posts: Post[];\n  setPosts: (posts: Post[]) => void;\n  comments: Comment[];\n  setComments: (comments: Comment[]) => void;\n};\n\ntype FeedProviderProps = {\n  children?: ReactNode;\n};\n\n// This is passed into the JSON.parse() call as the reviver so that\n// dates formatted as JSON strings will be converted into JS Date objects.\n// eslint-disable-next-line max-len\n// This code was taken from https://weblog.west-wind.com/posts/2014/jan/06/javascript-json-date-parsing-and-real-dates\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst dateParser = (_key: string, value: any): any => {\n  // eslint-disable-next-line\n  var reISO =\n    // eslint-disable-next-line max-len\n    /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*))(?:Z|(\\+|-)([\\d|:]*))?$/;\n  // eslint-disable-next-line\n  var reMsAjax = /^\\/Date\\((d|-|.*)\\)[\\/|\\\\]$/;\n\n  if (typeof value === 'string') {\n    let a = reISO.exec(value);\n    if (a) {\n      return new Date(value);\n    }\n    a = reMsAjax.exec(value);\n    if (a) {\n      const b = a[1].split(/[-+,.]/);\n      return new Date(b[0] ? +b[0] : 0 - +b[1]);\n    }\n  }\n  return value;\n};\n\nconst FeedContext = createContext<FeedContextProps>({} as FeedContextProps);\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const FeedProvider = function ({ children }: FeedProviderProps): any {\n  const localPosts: Post[] = JSON.parse(\n    localStorage.getItem('postData') || '[]',\n    dateParser\n  );\n  const localComments: Comment[] = JSON.parse(\n    localStorage.getItem('commentData') || '[]',\n    dateParser\n  );\n\n  const [posts, setPosts] = useState<Post[]>(localPosts);\n  const [comments, setComments] = useState<Comment[]>(localComments);\n\n  const updatePosts = (updatedPosts: Post[]): void => {\n    localStorage.setItem('postData', JSON.stringify(updatedPosts));\n    setPosts(updatedPosts);\n  };\n\n  const updateComments = (updatedComments: Comment[]): void => {\n    localStorage.setItem('commentData', JSON.stringify(updatedComments));\n    setComments(updatedComments);\n  };\n\n  return (\n    <FeedContext.Provider\n      // eslint-disable-next-line react/jsx-no-constructed-context-values\n      value={{\n        posts,\n        setPosts: updatePosts,\n        comments,\n        setComments: updateComments,\n      }}\n    >\n      {children}\n    </FeedContext.Provider>\n  );\n};\n\nFeedProvider.defaultProps = {\n  children: null,\n};\n\nexport function useFeed(): FeedContextProps {\n  const context = useContext(FeedContext);\n  if (context === undefined) {\n    throw new Error('useFeed must be used within a FeedProvider');\n  }\n  return context;\n}\n","import dayjs from 'dayjs';\n\nconst ONE_MINUTE = 60 * 1000;\nconst ONE_HOUR = 60 * ONE_MINUTE;\nconst ONE_DAY = ONE_HOUR * 24;\n\n// eslint-disable-next-line\nexport function dateToString(date: Date): string {\n  const dayDate = dayjs(date);\n\n  const diff = dayjs().diff(dayDate);\n  const diffDay = dayjs(diff);\n\n  if (diff < ONE_MINUTE) {\n    return 'Just now';\n  }\n\n  if (diff < ONE_HOUR) {\n    return `${diffDay.minute()} minutes ago`;\n  }\n\n  if (diff < ONE_DAY) {\n    return `${diffDay.hour()} hours ago`;\n  }\n\n  return dayDate.format('MM/DD/YYYY');\n}\n","export default __webpack_public_path__ + \"static/media/profile-pic.6fb0befb.png\";","import React, { SyntheticEvent } from 'react';\nimport profilePicture from '../assets/profile-pic.png';\nimport missingAvatar from '../assets/missing-avatar.png';\n\nenum SizeDimension {\n  sm = 40,\n  lg = 60,\n}\n\ntype AvatarProps = {\n  className?: string;\n  size: 'sm' | 'lg';\n};\n\nconst Avatar = function ({ className, size }: AvatarProps): JSX.Element {\n  return (\n    <img\n      src={profilePicture}\n      className={`rounded-circle ${className}` ?? ''}\n      width={SizeDimension[size]}\n      height={SizeDimension[size]}\n      alt=\"avatar\"\n      onError={(e: SyntheticEvent<HTMLImageElement>) => {\n        const target = e.target as HTMLImageElement;\n        target.onerror = null;\n        target.src = missingAvatar;\n      }}\n    />\n  );\n};\n\nAvatar.defaultProps = {\n  className: '',\n};\n\nexport default Avatar;\n","export default __webpack_public_path__ + \"static/media/missing-avatar.c3f94521.png\";","import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faHeart,\n  faPencilAlt,\n  faTrash,\n} from '@fortawesome/free-solid-svg-icons';\nimport { Comment } from '../types/comment';\nimport { dateToString } from '../utils/utils';\nimport { useFeed } from '../contexts/FeedContext';\nimport Avatar from './Avatar';\n\ninterface Props {\n  comment: Comment;\n}\n\nconst CommentItem = function ({ comment }: Props): JSX.Element {\n  const { id, text, likes, createdDate, createdBy } = comment;\n\n  const { comments, setComments } = useFeed();\n\n  const [isEditMode, setEditMode] = useState<boolean>(false);\n  const [editText, setEditText] = useState<string>(text);\n\n  const updateComment = (updatedComment: Comment): void => {\n    setComments([\n      ...comments.slice(0, id - 1),\n      {\n        ...comments[id - 1],\n        ...updatedComment,\n      },\n      ...comments.slice(id),\n    ]);\n  };\n\n  const handleCommentEditKeyPress = (\n    e: React.KeyboardEvent<HTMLTextAreaElement>\n  ): void => {\n    const target = e.target as HTMLTextAreaElement;\n    if (e.key === 'Enter' && target.value.trim().length !== 0) {\n      updateComment({ ...comment, text: target.value });\n      setEditMode(false);\n    }\n  };\n\n  const renderTextContent = (): JSX.Element => {\n    if (!isEditMode) {\n      return <span>{text}</span>;\n    }\n\n    return (\n      <textarea\n        className=\"form-control border-0 my-2\"\n        id=\"commentEditTextarea\"\n        rows={2}\n        value={editText}\n        placeholder=\"Add a comment\"\n        // eslint-disable-next-line jsx-a11y/no-autofocus\n        autoFocus\n        onBlur={() => setEditMode(false)}\n        onKeyPress={handleCommentEditKeyPress}\n        onChange={(e) => setEditText(e.target.value)}\n      />\n    );\n  };\n\n  return (\n    <div className=\"d-flex flex-row mt-3 mb-3 w-100\">\n      <Avatar className=\"me-2\" size=\"sm\" />\n      <div className=\"card rounded-card main-bg w-100\">\n        <div className=\"card-body\">\n          <div className=\"d-flex justify-content-between\">\n            <span className=\"fs-6 fw-normal text-secondary-dark\">\n              {`${createdBy.firstName} ${createdBy.lastName}`}\n            </span>\n            <span className=\"text-secondary fs-sm\">\n              {dateToString(createdDate)}\n            </span>\n          </div>\n          <span className=\"text-primary fs-sm\">{createdBy.occupation}</span>\n          <div className=\"fs-sm\">{renderTextContent()}</div>\n          <div className=\"d-flex flex-wrap text-secondary\">\n            <span className=\"me-2\">\n              {likes} {likes === 1 ? 'Like' : 'Likes'}\n            </span>\n            <span className=\"me-2\">|</span>\n            <button\n              className=\"btn btn-link link-secondary me-2 p-0\"\n              type=\"button\"\n              onClick={() => {\n                updateComment({ ...comment, likes: likes + 1 });\n              }}\n            >\n              <FontAwesomeIcon className=\"me-2 fs-sm\" icon={faHeart} />\n              Like\n            </button>\n            <span className=\"me-2\">|</span>\n            <button\n              className=\"btn btn-link link-secondary me-2 p-0\"\n              type=\"button\"\n              onClick={() => setEditMode(true)}\n            >\n              <FontAwesomeIcon className=\"me-2 fs-sm\" icon={faPencilAlt} />\n              Edit\n            </button>\n            <span className=\"me-2\">|</span>\n            <button\n              className=\"btn btn-link link-secondary me-2 p-0\"\n              type=\"button\"\n              onClick={() => updateComment({ ...comment, isDeleted: true })}\n            >\n              <FontAwesomeIcon className=\"me-2 fs-sm\" icon={faTrash} />\n              Delete\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CommentItem;\n","import React, { useMemo, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faCircle,\n  faCommentDots,\n  faEllipsisH,\n  faHeart,\n  faMapMarkerAlt,\n} from '@fortawesome/free-solid-svg-icons';\nimport { Post } from '../types/post';\nimport { Comment } from '../types/comment';\nimport CommentItem from './CommentItem';\nimport { dateToString } from '../utils/utils';\nimport { useFeed } from '../contexts/FeedContext';\nimport Avatar from './Avatar';\nimport Me from '../assets/Me.json';\n\ninterface Props {\n  post: Post;\n}\n\nconst PostItem = function ({ post }: Props): JSX.Element {\n  const { id, text, likes, createdDate, createdBy } = post;\n\n  const { posts, setPosts, comments, setComments } = useFeed();\n\n  const [showCommentSection, setShowCommentSection] = useState<boolean>(false);\n  const [isEditMode, setEditMode] = useState<boolean>(false);\n  const [editText, setEditText] = useState<string>(text);\n\n  const postComments: Comment[] = useMemo(\n    () =>\n      comments\n        .filter((comment) => comment.postId === id && !comment.isDeleted)\n        .sort((a, b) => b.createdDate.getTime() - a.createdDate.getTime()),\n    [id, comments]\n  );\n\n  const addComment = (commentText: string): void => {\n    const comment: Comment = {\n      id: comments.length + 1,\n      postId: id,\n      text: commentText,\n      likes: 0,\n      createdDate: new Date(),\n      createdBy: Me,\n      isDeleted: false,\n    };\n    setComments([...comments, comment]);\n  };\n\n  const updatePost = (updatedPost: Post): void => {\n    setPosts([\n      ...posts.slice(0, id - 1),\n      {\n        ...posts[id - 1],\n        ...updatedPost,\n      },\n      ...posts.slice(id),\n    ]);\n  };\n\n  const handleCommentKeyPress = (\n    e: React.KeyboardEvent<HTMLInputElement>\n  ): void => {\n    // Create the comment if the key is Enter and the value exists\n    const target = e.target as HTMLInputElement;\n    if (e.key === 'Enter' && target.value.trim().length !== 0) {\n      addComment(target.value);\n      target.value = '';\n    }\n  };\n\n  const handlePostEditKeyPress = (\n    e: React.KeyboardEvent<HTMLTextAreaElement>\n  ): void => {\n    // Update the post if the key is Enter and the value isn't whitespace\n    const target = e.target as HTMLTextAreaElement;\n    if (e.key === 'Enter' && target.value.trim().length !== 0) {\n      updatePost({ ...post, text: target.value });\n      setEditMode(false);\n    }\n  };\n\n  const renderTextContent = (): JSX.Element => {\n    if (!isEditMode) {\n      return <span>{text}</span>;\n    }\n\n    return (\n      <textarea\n        className=\"form-control border-0 ms-2 me-3 ps-1\"\n        id=\"postEditTextarea\"\n        rows={2}\n        value={editText}\n        placeholder=\"What is on your mind?\"\n        // eslint-disable-next-line jsx-a11y/no-autofocus\n        autoFocus\n        onBlur={() => {\n          setEditMode(false);\n          setEditText(text);\n        }}\n        onKeyPress={handlePostEditKeyPress}\n        onChange={(e) => setEditText(e.target.value)}\n      />\n    );\n  };\n\n  return (\n    <div className=\"card shadow-sm rounded-card mt-3\">\n      <div className=\"card-body\">\n        <div className=\"d-flex flex-row mb-3\">\n          <Avatar size=\"lg\" />\n          <div className=\"d-flex flex-row w-100 justify-content-between\">\n            <div className=\"fw-normal ms-3 text-secondary-dark\">\n              <div>{`${createdBy.firstName} ${createdBy.lastName}`}</div>\n              <div className=\"text-primary fs-sm\">\n                <FontAwesomeIcon className=\"me-2\" icon={faMapMarkerAlt} />\n                {createdBy.location.state}, {createdBy.location.country}\n              </div>\n              <div className=\"text-secondary fs-sm\">\n                {dateToString(createdDate)}\n              </div>\n            </div>\n            <div className=\"dropdown dropstart my-auto\">\n              <button\n                className=\"btn btn-link link-secondary p-0\"\n                type=\"button\"\n                id={`Post-${id}-dropdown-button`}\n                data-bs-toggle=\"dropdown\"\n                aria-expanded=\"false\"\n              >\n                <FontAwesomeIcon icon={faEllipsisH} />\n              </button>\n              <ul\n                className=\"dropdown-menu\"\n                aria-labelledby={`Post-${id}-dropdown-button`}\n              >\n                <li>\n                  <button\n                    className=\"btn btn-link dropdown-item\"\n                    type=\"button\"\n                    onClick={() => setEditMode(true)}\n                    disabled={isEditMode}\n                  >\n                    Edit\n                  </button>\n                </li>\n                <li>\n                  <button\n                    className=\"btn btn-link dropdown-item\"\n                    type=\"button\"\n                    onClick={() =>\n                      updatePost({\n                        ...post,\n                        isDeleted: true,\n                      })\n                    }\n                  >\n                    Delete\n                  </button>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n        <div>{renderTextContent()}</div>\n        <div className=\"d-flex text-secondary mt-2\">\n          {likes} {likes === 1 ? 'Like' : 'Likes'}\n          <FontAwesomeIcon\n            className=\"my-auto mx-1\"\n            icon={faCircle}\n            style={{ fontSize: 4 }}\n          />\n          {postComments.length} Comments\n        </div>\n      </div>\n      <div className=\"card-footer\">\n        <span>\n          <button\n            className=\"btn btn-link link-secondary p-0\"\n            type=\"button\"\n            onClick={() => updatePost({ ...post, likes: likes + 1 })}\n          >\n            <FontAwesomeIcon className=\"me-2 text-secondary\" icon={faHeart} />\n            Like\n          </button>\n        </span>\n        <span className=\"ms-3\">\n          <button\n            className={`btn btn-link link-secondary p-0 ${\n              showCommentSection || postComments.length > 0 ? 'fw-bold' : null\n            }`}\n            type=\"button\"\n            onClick={() => setShowCommentSection(!showCommentSection)}\n          >\n            <FontAwesomeIcon\n              className=\"me-2 text-secondary\"\n              icon={faCommentDots}\n            />\n            Comment\n          </button>\n        </span>\n        {(showCommentSection || postComments.length > 0) && (\n          <div>\n            <div className=\"d-flex flex-row mt-3 mb-3 w-100\">\n              <Avatar className=\"me-2\" size=\"sm\" />\n              <input\n                className=\"input-pill px-3 w-100\"\n                placeholder=\"Add a comment\"\n                onKeyPress={handleCommentKeyPress}\n              />\n            </div>\n            {postComments.map((comment) => (\n              <CommentItem key={`Comment-${comment.id}`} comment={comment} />\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default PostItem;\n","import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPhotoVideo } from '@fortawesome/free-solid-svg-icons';\nimport { useFeed } from '../contexts/FeedContext';\nimport Avatar from './Avatar';\nimport Me from '../assets/Me.json';\n\nconst ContentCreator = function (): JSX.Element {\n  const { posts, setPosts } = useFeed();\n\n  const addPost = (text: string): void => {\n    const newPost = {\n      id: posts.length + 1,\n      text,\n      likes: 0,\n      createdDate: new Date(),\n      createdBy: Me,\n      isDeleted: false,\n    };\n    setPosts([...posts, newPost]);\n  };\n\n  const [message, setMessage] = useState<string>('');\n\n  return (\n    <div className=\"card shadow-sm rounded-card\">\n      <div className=\"card-body\">\n        <div className=\"mb-3 d-flex flex-row\">\n          <Avatar size=\"sm\" />\n          <textarea\n            className=\"form-control border-0 ms-2 ps-1\"\n            id=\"postTextarea\"\n            rows={2}\n            placeholder=\"What is on your mind?\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n          />\n        </div>\n      </div>\n      <div className=\"card-footer bg-transparent\">\n        <div className=\"d-flex flex-wrap justify-content-between\">\n          <button type=\"button\" className=\"btn btn-dark rounded-pill mt-1\">\n            <FontAwesomeIcon className=\"me-2\" icon={faPhotoVideo} />\n            Photo/Video\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-primary mt-1\"\n            onClick={() => {\n              addPost(message);\n              setMessage('');\n            }}\n            disabled={message.trim().length === 0}\n          >\n            Post It\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ContentCreator;\n","import React from 'react';\nimport { useFeed } from '../contexts/FeedContext';\nimport { Post } from '../types/post';\nimport PostItem from './PostItem';\nimport ContentCreator from './ContentCreator';\n\nconst Feed = function (): JSX.Element {\n  const { posts } = useFeed();\n\n  return (\n    <div className=\"main-bg min-vh-100\">\n      <div className=\"container-sm\">\n        <div className=\"py-3\">\n          <ContentCreator />\n          {posts\n            .filter((post) => !post.isDeleted)\n            .sort((a, b) => b.createdDate.getTime() - a.createdDate.getTime())\n            .map((post: Post) => (\n              <PostItem key={`Post-${post.id}`} post={post} />\n            ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Feed;\n","import React from 'react';\n\nimport { FeedProvider } from './contexts/FeedContext';\nimport Feed from './components/Feed';\n\nconst App = function (): JSX.Element {\n  return (\n    <FeedProvider>\n      <Feed />\n    </FeedProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/js/bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}